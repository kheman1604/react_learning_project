[{"D:\\React-Test-App\\testapp\\src\\Components\\Login.jsx":"1","D:\\React-Test-App\\testapp\\src\\index.js":"2","D:\\React-Test-App\\testapp\\src\\Components\\Navbar.jsx":"3","D:\\React-Test-App\\testapp\\src\\Components\\Home.jsx":"4","D:\\React-Test-App\\testapp\\src\\Components\\CardShow.jsx":"5"},{"size":3911,"mtime":1607079748357,"results":"6","hashOfConfig":"7"},{"size":303,"mtime":1607068203617,"results":"8","hashOfConfig":"7"},{"size":684,"mtime":1607068270709,"results":"9","hashOfConfig":"7"},{"size":476,"mtime":1607079598350,"results":"10","hashOfConfig":"7"},{"size":1012,"mtime":1607079887216,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x1l4y6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React-Test-App\\testapp\\src\\Components\\Login.jsx",["22","23","24"],"D:\\React-Test-App\\testapp\\src\\index.js",[],"D:\\React-Test-App\\testapp\\src\\Components\\Navbar.jsx",[],"D:\\React-Test-App\\testapp\\src\\Components\\Home.jsx",[],"D:\\React-Test-App\\testapp\\src\\Components\\CardShow.jsx",["25","26"],{"ruleId":"27","severity":1,"message":"28","line":12,"column":10,"nodeType":"29","messageId":"30","endLine":12,"endColumn":17},{"ruleId":"27","severity":1,"message":"31","line":12,"column":19,"nodeType":"29","messageId":"30","endLine":12,"endColumn":32},{"ruleId":"32","severity":1,"message":"33","line":65,"column":34,"nodeType":"34","messageId":"35","endLine":65,"endColumn":36},{"ruleId":"27","severity":1,"message":"36","line":2,"column":32,"nodeType":"29","messageId":"30","endLine":2,"endColumn":38},{"ruleId":"37","severity":1,"message":"38","line":10,"column":15,"nodeType":"39","endLine":14,"endColumn":6},"no-unused-vars","'jsonAry' is assigned a value but never used.","Identifier","unusedVar","'fillJsonArray' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]